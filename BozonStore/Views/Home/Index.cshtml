@{
    //ViewData["Title"] = "Home Page";
}


<div id="ProductsContainer">
    @if (Context.Request.Query.ContainsKey("catalogType"))
    {
        @await Component.InvokeAsync("SearchForm", new { productType = Context.Request.Query["catalogType"].ToString() })
    }
    <div id="ProductsWindow"></div>
</div>




@section Scripts{

    <script src="~/lib/handlebars.js/handlebars.js"></script>
    <script src="~/js/handtemp.js"></script>
    <script src="~/js/Index.js"></script>
    <script src="~/js/buy.js"></script>

    <script type="text/x-handlebars-template" id="prodTemplate">
        <div class="prodContainer" id="{{id}}" onclick="window.location.href='/Product/Product/ViewProduct?id='+{{id}}">
            <div>
                <img class="prodImage" src="{{src}}">
            </div>
            <div>
                <p class="prodPrice">{{price}}</p>
            </div>
            <div>
                <p class="prodTitle">{{title}}</p>
            </div>
            <div class="buyButton">
                @{
                    var url = Url.Action("AddProductToShopCart", "Buyer", new { area = "User" }) + "?prodId=" + "{{id}}";
                }
                <a onclick="AddProductToShopCart(event,'@url')">В корзину</a>
            </div>
        </div>
    </script>
}
