@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<div>
    
        @foreach (var prop in ViewData.ModelMetadata.Properties)
        {

            @if (prop.ModelType == typeof(string))
            {
                var propName = prop.PropertyName;
                var propDisplay = prop.DisplayName;

                <label>@propDisplay</label>
                <input name=@propName value="@Context.Request.Query[propName]"/>
            }
            @if (prop.ModelType == typeof(int) && prop.ShowForEdit)
            {
                var propName = prop.PropertyName;
                var propNameFirst = string.Concat(propName, "[0]");
                var propNameSecond = string.Concat(propName, "[1]");
                var propDisplay = prop.DisplayName;

            <div>
                <label>@propDisplay</label>
                <div class="ranges">
                    <div class="ranges-line"></div>
                    <input step="any" type="range" />
                    <input step="any" type="range" />
                </div>
                <div class="fields">
                    <p>от</p>
                    <input name=@propNameFirst value="@Context.Request.Query[propNameFirst]"/>
                    <p>до</p>
                    <input name=@propNameSecond value="@Context.Request.Query[propNameSecond]"/>
                </div>
            </div>
            }

            //<h3>@prop.DisplayName</h3>
        }
    
</div>
<script>

    var items = document.querySelectorAll("#ProductSearch input[type='range']");

    var index;
    for (index = 0; index < items.length; ++index) {
        items[index].addEventListener("mouseup", func);
        items[index].addEventListener("mousedown", func);
    }


    function func(t) {
        console.log(t);
        console.log("target: " + t.target + " /currentTarget:" + t.currentTarget + "/timestamp:" + t.timeStamp);
        //if (t.target === t.currentTarget || t.timeStamp >= o || t.timeStamp <= 0 || t.target.ownerDocument !== document) return c.apply(this, arguments)
    }

</script>

