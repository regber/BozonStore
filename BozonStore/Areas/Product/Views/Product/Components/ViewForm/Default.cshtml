@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@model Product


@Html.DisplayForModel()
@Html.DisplayFor(m => m.Images)

<script src="/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>

<script src="~/lib/handlebars.js/handlebars.js"></script>
<script src="~/js/handtemp.js"></script>


<script>
    $(document).ready(function () {

        RenderLoadFileEvent();
        LoadImagesEditableProduct();
    });
</script>
<script>
    const selectedClass = ["selectedImageContainer"];

    function RenderLoadFileEvent() {
        $("#imagesFileInput").change(function () {

            $("#previewImages").empty();

            imageFiles = $('#imagesFileInput').prop('files');

            $.each(imageFiles, function (idx, file) {

                if (file) {
                    let reader = new FileReader();
                    reader.onload = function (event) {

                        if (file.name == MainImageName) {
                            CreateFromTemplate("#previewImages", "#imgTemplate", { filename: file.name, src: event.target.result, selected: selectedClass });
                        }
                        else {
                            CreateFromTemplate("#previewImages", "#imgTemplate", { filename: file.name, src: event.target.result });
                        }
                    }
                    reader.readAsDataURL(file);
                }
            });
        });
    }

    function LoadImagesEditableProduct() {
        var id =@Html.Raw(Model.Id);
        var images = @Html.Raw(@JsonConvert.SerializeObject(Model.Images));


        $.each(images, function (idx, img) {
            if (img.MainImage) {
                MainImageName = img.Name;
            }
        });

        const dt = new DataTransfer();

        document.querySelector('#imagesFileInput').files = dt.files;

        $.each(images, function (idx, img) {

            fetch("@Url.Action("GetProposalImage","Common", new {area="" })" + "?prodId=" + id +"&imageName=" + img.Name)
                .then(response => response.blob())
                .then(blobFile => new File([blobFile], img.Name, { type: "image/*" }))
                .then(file => {

                    dt.items.add(file);

                    if (dt.items.length == images.length) {
                        $("#imagesFileInput").trigger("change");
                    }
                });
        });
    }

</script>

<script type="text/x-handlebars-template" id="imgTemplate">
    <div class="imageContainer {{selected}}">

        <img class="imagePreview" height="100" src="{{src}}" filename="{{filename}}">
        <span>{{filename}}</span>

    </div>
</script>