// <auto-generated />
using System;
using BozonStore.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BozonStore.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220419114232_InitDB")]
    partial class InitDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("BozonStore.Models.Delivery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.HasKey("Id");

                    b.ToTable("Deliveries");
                });

            modelBuilder.Entity("BozonStore.Models.ImageData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("BaseProductId")
                        .HasColumnType("int");

                    b.Property<string>("Uri")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BaseProductId");

                    b.ToTable("ImageData");
                });

            modelBuilder.Entity("BozonStore.Models.ProductModel.BaseProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Discription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MainImageId")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("SellerId")
                        .HasColumnType("int");

                    b.Property<int?>("SellerShopId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MainImageId");

                    b.HasIndex("SellerId");

                    b.HasIndex("SellerShopId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("BozonStore.Models.Purchas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("BuyerId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("SellerId")
                        .HasColumnType("int");

                    b.Property<int?>("SellerShopId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SellerId");

                    b.HasIndex("SellerShopId");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("BozonStore.Models.SellerShop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SellerId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SellerId");

                    b.ToTable("SellerShop");
                });

            modelBuilder.Entity("BozonStore.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("BozonStore.Models.Buyer", b =>
                {
                    b.HasBaseType("BozonStore.Models.User");

                    b.HasDiscriminator().HasValue("Buyer");
                });

            modelBuilder.Entity("BozonStore.Models.Seller", b =>
                {
                    b.HasBaseType("BozonStore.Models.User");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Seller");
                });

            modelBuilder.Entity("BozonStore.Models.ImageData", b =>
                {
                    b.HasOne("BozonStore.Models.ProductModel.BaseProduct", null)
                        .WithMany("Images")
                        .HasForeignKey("BaseProductId");
                });

            modelBuilder.Entity("BozonStore.Models.ProductModel.BaseProduct", b =>
                {
                    b.HasOne("BozonStore.Models.ImageData", "MainImage")
                        .WithMany()
                        .HasForeignKey("MainImageId");

                    b.HasOne("BozonStore.Models.Seller", "Seller")
                        .WithMany()
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BozonStore.Models.SellerShop", null)
                        .WithMany("Products")
                        .HasForeignKey("SellerShopId");

                    b.Navigation("MainImage");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("BozonStore.Models.Purchas", b =>
                {
                    b.HasOne("BozonStore.Models.Buyer", null)
                        .WithMany("Purchases")
                        .HasForeignKey("BuyerId");

                    b.HasOne("BozonStore.Models.ProductModel.BaseProduct", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("BozonStore.Models.Seller", "Seller")
                        .WithMany()
                        .HasForeignKey("SellerId");

                    b.HasOne("BozonStore.Models.SellerShop", "SellerShop")
                        .WithMany()
                        .HasForeignKey("SellerShopId");

                    b.Navigation("Product");

                    b.Navigation("Seller");

                    b.Navigation("SellerShop");
                });

            modelBuilder.Entity("BozonStore.Models.SellerShop", b =>
                {
                    b.HasOne("BozonStore.Models.Seller", "Seller")
                        .WithMany("SellersShops")
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("BozonStore.Models.ProductModel.BaseProduct", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("BozonStore.Models.SellerShop", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("BozonStore.Models.Buyer", b =>
                {
                    b.Navigation("Purchases");
                });

            modelBuilder.Entity("BozonStore.Models.Seller", b =>
                {
                    b.Navigation("SellersShops");
                });
#pragma warning restore 612, 618
        }
    }
}
